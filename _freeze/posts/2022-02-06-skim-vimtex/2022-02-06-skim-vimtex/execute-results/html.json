{
  "hash": "ab73e14523ce8f73560e04d13c40cb4c",
  "result": {
    "markdown": "---\n# toc: true\n# layout: post\nimage: neovim-logo.png \npermalink: /skim-vimtex-setup/\ndescription: A short post to setup Skim pdf reader with Vimtex plugin in Mac OS.  \ncategories: [skim, vimtex, neovim, vim, mac, inverse search, backward search]\ntitle: Setup Skim PDF reader with VimTeX in Mac OS\n# author: Deepak Ramani\n---\n\n[VimTeX](https://github.com/lervag/vimtex) plugin written by Karl Yngve Lervåg is one of the goto plugins to manage\nLaTeX files with Vim/Neovim text editors. VimTeX allows integration with several PDF\nviewers. In Mac OS, [Skim](https://skim-app.sourceforge.io) and [Zathura](https://pwmt.org/projects/zathura/)\nPDF readers allows easy integration with LaTeX. Since Zathura's installation in Mac OS involves more steps, \nwe will be using Skim for this post. \n\n::: callout-warning\nYou should have a working LaTeX setup\n:::\n\n## Install Skim \n\nWith [Homebrew](../brew.sh)\n\n\n```{bash}\nbrew install --cask skim\n```\n\nOr download the dmg file of the current version(as of writing latest version is v1.6.8)\nfrom [Skim's website](https://skim-app.sourceforge.io).\n\n## Install VimTeX\n\nUsing [vim-plug](https://github.com/junegunn/vim-plug) plugin manager we add the following\nline to `.vimrc` or `init.vim` or `init.lua`\n\n\n```{bash}\nPlug 'lervag/vimtex'\n```\n\n\n## Pdf preview \nConversion between TeX and PDF is one of the most common operations while writing a\nscientific document. Though it is possible to open the PDF file in one of the commercially available\nPDF readers, a seamless integration with neovim(in our case) is appreciated. This is where\nSkim comes into the picture. By default, Skim allows native, seamless integration with the\nLaTex editor of choice. In our case, we can make VimTex interact with Skim with just a few\nlines of config.\n\n## Configurations \n\n### Minimal setup and Forward Search\n\nWe require the following lines to make VimTeX talk to Skim within neovim. This direction of\ncommunication, is known as *forward search*. \n\n\n```{bash}\nlet g:vimtex_view_method = 'skim' # Choose which program to use to view PDF file \nlet g:vimtex_view_skim_sync = 1 # Value 1 allows forward search after every successful compilation\nlet g:vimtex_view_skim_activate = 1 # Value 1 allows change focus to skim after command `:VimtexView` is given\n\n```\n\nThe forward search allows any change made in the TeX file automatically refreshes Skim to\nreflect those changes in PDF. One of the other common uses is cursor sync between the TeX file and PDF. \nSetting `let g:vimtex_view_skim_sync` allows placing the cursor in some position in the Tex file sync with the same\nposition in the PDF after every successful compilation(`:VimtexCompile`). Setting `let g:vimtex_view_skim_activate`\nallows to shift focus of control from neovim to Skim and bring it to foreground. \n\n### Inverse or Backward Search\n\nSo far there was only one channel of communication between neovim(editor) and Skim.\nA backward communication is possible but it took quite bit of hacking to get it\nto work. More on that read [this jdhao's post](https://jdhao.github.io/2021/02/20/inverse_search_setup_neovim_vimtex/). \nHowever, with the release of [VimTex v2.8](https://github.com/lervag/vimtex/releases/tag/v2.8),\nit has become simple to setup. \n\nConsider a scenario where we are going through a paper and find an error, instead of going\nback to source TeX file and finding the error location can be cumbersome. Using *backward\nsearch*, we can go to the error location from PDF to TeX. For Skim, to activate *backward\nsearch* press `shift` and `command` together and `click` the position in PDF using the\nmouse. That location gets reflected in the editor in the background. For more information,\nsee `:h :VimtexInverseSearch`\n\nNatively, every instance of neovim starts a server [^1]. With Skim\nas client and nvim as server, we can interact in that direction. \n\nIn order to do so, in the preferances pane of Skim, navigate to `Sync` tab. There, in the\n`PDF-TeX Sync support`, make `preset` as `custom`, `command` as `nvim`(use `vim` if you\nuse vim editor), and set `arguments` as `--headless -c \"VimtexInverseSearch %line '%file'\"`.\n![](skim_setting.png \"Skim preferances window\")\n\n**Important:** Skim must be started by VimTeX (either through compiler callback or explicitly via <leader>lv) \nfor backward sync to work! (This is how Skim “knows” which neovim instance – terminal or GUI – to sync to.)\n\n## Conclusion\nWith just four lines of settings in the `init.vim` file and a line in Skim preferances, we\ncan activate both forward and backward search features with VimTeX. \n\n## Footnotes\n[^1]: In the nvim command line, run `:echo v:servername` to know the name of the server\n\n",
    "supporting": [
      "2022-02-06-skim-vimtex_files"
    ],
    "filters": [],
    "includes": {}
  }
}