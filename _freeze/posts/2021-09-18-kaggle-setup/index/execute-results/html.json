{
  "hash": "b4e954c04dbd6aebb3bfb883335e92c6",
  "result": {
    "markdown": "---\n# toc: true\n# layout: post\n# author: Deepak Ramani\nimage: kaggle-logo.png\npermalink: /kaggle-setup/\ndescription: A guide to setup Kaggle API on Linux/Mac.\ncategories: [kaggle, markdown]\ntitle: Setting up Kaggle on Linux/Mac\ndata: \"2021-09-18\"\n---\n\nMost of latest data science innovations happen at [Kaggle](https://www.kaggle.com).\nKaggle hosts, in addtion to competitions, a large collection of datasets from various\nfields. The easiest way to interact with Kaggle is through its public API via command-line\ntool(CLI). Setting it up outside of Kaggle kernels is one of first tasks. In this post, I\nwill guide you through that process.\n\n::: callout-note\n**Pre-requisite**: Python3(>3.6) and latest pip installed.\n:::\n<!-- > **Pre-requisite**: Python3(>3.6) and latest pip installed. -->\n\n## Installation\n\n\n```{bash}\npip install --user kaggle\n```\n\n::: callout-tip\n**Tip**: Install `kaggle` package inside your conda ML development environment rather than outside of\nit or in base env.\n:::\n<!-- > **Tip**: Install `kaggle` package inside your conda ML development environment rather than outside of it or in base env. -->\n\n::: callout-warning\nDon't do `sudo pip install kaggle` as it would require admin privileges for\nevery run.\n:::\n<!-- > **Warning**: Don't do `sudo pip install kaggle` as it would require admin privileges for every run. -->\n\n## Download API token\n\n1. Create/login into your kaggle account.\n1. From the site header, click on your user profile picture and select Account. You will\n   be land on your profile with account tab active.\n1. Scroll down to API section. Click `Create New API Token`. A `json` file will be\n   downloaded your default download directory.\n\n## Move .json file to the correct location\n\n1. Move it to `.kaggle` in the home directory. Create if absent.\n\n```{bash}\ncd\nmkdir ~/.kaggle\nmv <location>/kaggle.json ~/.kaggle/kaggle.json\n```\n\n1. For your security, ensure that other users of your computer do not have read access to your credentials.\nOn Unix-based systems you can do this with the following command:\n\n```{bash}\nchmod 600 ~/.kaggle/kaggle.json\n```\n\n1. Restart the terminal and navigate to the env where kaggle package is installed if necessary.\n\n## Check if it is properly installed\n\n1. Run:\n\n```{bash}\n$python\n>>>import kaggle\n```\n\nImporting kaggle shouldn't return an error. If there is error, check whether you're in the\nright env where kaggle is installed.\n\nIf no error, exit the shell and type the following command in the terminal.\n\n\n```{bash}\nkaggle competitions list\n```\n\n\nIf installed properly, the command will list all the entered competitions.\n1. If not, the binary path may be incorrect. Usually it is installed in `~/.local/bin`\nTry using\n\n```{bash}\n~/.local/bin/kaggle competitions list\n```\n\n1. If the above command works, export that binary path to the shell environment(*bashrc*)\n   so that you might use just `kaggle` next time.\n\n## API usage\n\nIt is time to use the Kaggle API. For example, to see what dataset command offers, in the CLI enter\n\n```{bash}\nkaggle dataset --help\n```\n\n::: callout-tip\n**Tip**: Remember to comply with competition's terms and conditions before downloading the dataset. You will get an error `forbidden` if you try to download before agreeing.\n:::\n\nFor more info on the API, Kaggle's [github](https://github.com/Kaggle/kaggle-api#commands) page is an excellent resource.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}